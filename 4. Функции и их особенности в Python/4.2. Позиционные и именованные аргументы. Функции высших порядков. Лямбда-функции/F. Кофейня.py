# Руководство местной кофейни для программистов под названием
# Java-0x00 решило модернизировать систему заказа кофе.
#
# Для этого им требуется реализовать функцию order,
# которая принимает список предпочтений посетителя
# в порядке «убывания желания».
#
# Согласно положению, каждый напиток в кофейне
# строго определён рецептом:
#
# Эспрессо готовится из: 1 порции кофейных зерен.
# Капучино готовится из: 1 порции кофейных зерен
# и 3 порций молока.
# Макиато готовится из: 2 порций кофейных зерен
# и 1 порции молока.
# Кофе по-венски готовится из: 1 порции кофейных
# зерен и 2 порций взбитых сливок.
# Латте Макиато готовится из: 1 порции кофейных
# зерен, 2 порций молока и 1 порции взбитых сливок.
# Кон Панна готовится из: 1 порции кофейных зерен
# и 1 порции взбитых сливок.
# В глобальной переменной in_stock содержится
# словарь, описывающий ингредиенты в наличии.
# Ключи словаря: coffee, cream, milk.
#
# Функция должна вернуть:
#
# название напитка, который будет приготовлен;
# сообщение «К сожалению, не можем предложить
# Вам напиток», если ни одно из предпочтений
# не может быть приготовлено.
# Если заказ, может быть совершён, количество
# доступных ингредиентов должно соответствующим
# образом уменьшиться.
#
# Примечание
# В решении не должно быть вызовов требуемых функций.

def order(*wishlist):

    drinks = {
        "Эспрессо": {
            "coffee": 1,
            "milk": 0,
            "cream": 0
        },
        "Капучино": {
            "coffee": 1,
            "milk": 3,
            "cream": 0
        },
        "Макиато": {
            "coffee": 2,
            "milk": 1,
            "cream": 0
        },
        "Кофе по-венски": {
            "coffee": 1,
            "milk": 0,
            "cream": 2
        },
        "Латте Макиато": {
            "coffee": 1,
            "milk": 2,
            "cream": 1
        },
        "Кон Панна": {
            "coffee": 1,
            "milk": 0,
            "cream": 1
        }
    }

    for item in wishlist:
        if drinks[item]["coffee"] <= in_stock["coffee"] \
                and drinks[item]["milk"] <= in_stock["milk"] \
                and drinks[item]["cream"] <= in_stock["cream"]:
            in_stock["coffee"] -= drinks[item]["coffee"]
            in_stock["milk"] -= drinks[item]["milk"]
            in_stock["cream"] -= drinks[item]["cream"]
            return item
    return "К сожалению, не можем предложить Вам напиток"
