# –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é multiplication_matrix, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ä–∞–∑–º–µ—Ä –º–∞—Ç—Ä–∏—Ü—ã (N)
# –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π —Ç–∞–±–ª–∏—Ü—É —É–º–Ω–æ–∂–µ–Ω–∏—è
# ùëÅ
# N –Ω–∞
# ùëÅ
# N.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ
# –í–∞—à–µ —Ä–µ—à–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏–∏.
# –í —Ä–µ—à–µ–Ω–∏–∏ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤—ã–∑–æ–≤–æ–≤ —Ç—Ä–µ–±—É–µ–º—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π.
import numpy as np


def multiplication_matrix(N):
    matrix = np.zeros((N, N), dtype="int32")
    for column in range(1, N + 1):
        for raw in range(1, N + 1):
            matrix[column - 1, raw - 1] = column * raw
    return matrix


